# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _fifechan.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_fifechan')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_fifechan')
    _fifechan = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_fifechan', [dirname(__file__)])
        except ImportError:
            import _fifechan
            return _fifechan
        try:
            _mod = imp.load_module('_fifechan', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _fifechan = swig_import_helper()
    del swig_import_helper
else:
    import _fifechan
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


try:
    import weakref
    weakref_proxy = weakref.proxy
except __builtin__.Exception:
    weakref_proxy = lambda x: x


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _fifechan.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_fifechan.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_fifechan.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_fifechan.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_fifechan.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_fifechan.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_fifechan.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_fifechan.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_fifechan.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_fifechan.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_fifechan.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_fifechan.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_fifechan.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_fifechan.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_fifechan.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_fifechan.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_fifechan.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _fifechan.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

class MouseListener(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _fifechan.delete_MouseListener

    def __init__(self):
        if self.__class__ == MouseListener:
            _self = None
        else:
            _self = self
        _fifechan.MouseListener_swiginit(self, _fifechan.new_MouseListener(_self, ))
    def __disown__(self):
        self.this.disown()
        _fifechan.disown_MouseListener(self)
        return weakref_proxy(self)
MouseListener.mouseEntered = new_instancemethod(_fifechan.MouseListener_mouseEntered, None, MouseListener)
MouseListener.mouseExited = new_instancemethod(_fifechan.MouseListener_mouseExited, None, MouseListener)
MouseListener.mousePressed = new_instancemethod(_fifechan.MouseListener_mousePressed, None, MouseListener)
MouseListener.mouseReleased = new_instancemethod(_fifechan.MouseListener_mouseReleased, None, MouseListener)
MouseListener.mouseClicked = new_instancemethod(_fifechan.MouseListener_mouseClicked, None, MouseListener)
MouseListener.mouseWheelMovedUp = new_instancemethod(_fifechan.MouseListener_mouseWheelMovedUp, None, MouseListener)
MouseListener.mouseWheelMovedDown = new_instancemethod(_fifechan.MouseListener_mouseWheelMovedDown, None, MouseListener)
MouseListener.mouseWheelMovedRight = new_instancemethod(_fifechan.MouseListener_mouseWheelMovedRight, None, MouseListener)
MouseListener.mouseWheelMovedLeft = new_instancemethod(_fifechan.MouseListener_mouseWheelMovedLeft, None, MouseListener)
MouseListener.mouseMoved = new_instancemethod(_fifechan.MouseListener_mouseMoved, None, MouseListener)
MouseListener.mouseDragged = new_instancemethod(_fifechan.MouseListener_mouseDragged, None, MouseListener)
MouseListener_swigregister = _fifechan.MouseListener_swigregister
MouseListener_swigregister(MouseListener)

class KeyListener(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _fifechan.delete_KeyListener

    def __init__(self):
        if self.__class__ == KeyListener:
            _self = None
        else:
            _self = self
        _fifechan.KeyListener_swiginit(self, _fifechan.new_KeyListener(_self, ))
    def __disown__(self):
        self.this.disown()
        _fifechan.disown_KeyListener(self)
        return weakref_proxy(self)
KeyListener.keyPressed = new_instancemethod(_fifechan.KeyListener_keyPressed, None, KeyListener)
KeyListener.keyReleased = new_instancemethod(_fifechan.KeyListener_keyReleased, None, KeyListener)
KeyListener_swigregister = _fifechan.KeyListener_swigregister
KeyListener_swigregister(KeyListener)

class ActionListener(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _fifechan.delete_ActionListener

    def __init__(self):
        if self.__class__ == ActionListener:
            _self = None
        else:
            _self = self
        _fifechan.ActionListener_swiginit(self, _fifechan.new_ActionListener(_self, ))
    def __disown__(self):
        self.this.disown()
        _fifechan.disown_ActionListener(self)
        return weakref_proxy(self)
ActionListener.action = new_instancemethod(_fifechan.ActionListener_action, None, ActionListener)
ActionListener_swigregister = _fifechan.ActionListener_swigregister
ActionListener_swigregister(ActionListener)

class WidgetListener(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _fifechan.delete_WidgetListener

    def __init__(self):
        if self.__class__ == WidgetListener:
            _self = None
        else:
            _self = self
        _fifechan.WidgetListener_swiginit(self, _fifechan.new_WidgetListener(_self, ))
    def __disown__(self):
        self.this.disown()
        _fifechan.disown_WidgetListener(self)
        return weakref_proxy(self)
WidgetListener.widgetResized = new_instancemethod(_fifechan.WidgetListener_widgetResized, None, WidgetListener)
WidgetListener.widgetMoved = new_instancemethod(_fifechan.WidgetListener_widgetMoved, None, WidgetListener)
WidgetListener.widgetHidden = new_instancemethod(_fifechan.WidgetListener_widgetHidden, None, WidgetListener)
WidgetListener.widgetShown = new_instancemethod(_fifechan.WidgetListener_widgetShown, None, WidgetListener)
WidgetListener.ancestorMoved = new_instancemethod(_fifechan.WidgetListener_ancestorMoved, None, WidgetListener)
WidgetListener.ancestorHidden = new_instancemethod(_fifechan.WidgetListener_ancestorHidden, None, WidgetListener)
WidgetListener.ancestorShown = new_instancemethod(_fifechan.WidgetListener_ancestorShown, None, WidgetListener)
WidgetListener_swigregister = _fifechan.WidgetListener_swigregister
WidgetListener_swigregister(WidgetListener)


def getVersion():
    return _fifechan.getVersion()
getVersion = _fifechan.getVersion

def getMajor():
    return _fifechan.getMajor()
getMajor = _fifechan.getMajor

def getMinor():
    return _fifechan.getMinor()
getMinor = _fifechan.getMinor

def getPatch():
    return _fifechan.getPatch()
getPatch = _fifechan.getPatch

def getHash():
    return _fifechan.getHash()
getHash = _fifechan.getHash
class Graphics(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Left = _fifechan.Graphics_Left
    Center = _fifechan.Graphics_Center
    Right = _fifechan.Graphics_Right
    __swig_destroy__ = _fifechan.delete_Graphics
Graphics_swigregister = _fifechan.Graphics_swigregister
Graphics_swigregister(Graphics)

class Color(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.Color_swiginit(self, _fifechan.new_Color(*args))
    r = _swig_property(_fifechan.Color_r_get, _fifechan.Color_r_set)
    g = _swig_property(_fifechan.Color_g_get, _fifechan.Color_g_set)
    b = _swig_property(_fifechan.Color_b_get, _fifechan.Color_b_set)
    a = _swig_property(_fifechan.Color_a_get, _fifechan.Color_a_set)
    __swig_destroy__ = _fifechan.delete_Color
Color.__add__ = new_instancemethod(_fifechan.Color___add__, None, Color)
Color.__sub__ = new_instancemethod(_fifechan.Color___sub__, None, Color)
Color.__mul__ = new_instancemethod(_fifechan.Color___mul__, None, Color)
Color.__eq__ = new_instancemethod(_fifechan.Color___eq__, None, Color)
Color.__ne__ = new_instancemethod(_fifechan.Color___ne__, None, Color)
Color_swigregister = _fifechan.Color_swigregister
Color_swigregister(Color)

class Size(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, width=0, height=0):
        _fifechan.Size_swiginit(self, _fifechan.new_Size(width, height))
    __swig_destroy__ = _fifechan.delete_Size
Size.getWidth = new_instancemethod(_fifechan.Size_getWidth, None, Size)
Size.getHeight = new_instancemethod(_fifechan.Size_getHeight, None, Size)
Size.setWidth = new_instancemethod(_fifechan.Size_setWidth, None, Size)
Size.setHeight = new_instancemethod(_fifechan.Size_setHeight, None, Size)
Size_swigregister = _fifechan.Size_swigregister
Size_swigregister(Size)

class Point(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    x = _swig_property(_fifechan.Point_x_get, _fifechan.Point_x_set)
    y = _swig_property(_fifechan.Point_y_get, _fifechan.Point_y_set)

    def __init__(self, *args):
        _fifechan.Point_swiginit(self, _fifechan.new_Point(*args))

    def __truediv__(self, *args):
        return _fifechan.Point___truediv__(self, *args)
    __div__ = __truediv__


    __swig_destroy__ = _fifechan.delete_Point
Point.__add__ = new_instancemethod(_fifechan.Point___add__, None, Point)
Point.__sub__ = new_instancemethod(_fifechan.Point___sub__, None, Point)
Point.__iadd__ = new_instancemethod(_fifechan.Point___iadd__, None, Point)
Point.__isub__ = new_instancemethod(_fifechan.Point___isub__, None, Point)
Point.__mul__ = new_instancemethod(_fifechan.Point___mul__, None, Point)
Point.__eq__ = new_instancemethod(_fifechan.Point___eq__, None, Point)
Point.__ne__ = new_instancemethod(_fifechan.Point___ne__, None, Point)
Point.length = new_instancemethod(_fifechan.Point_length, None, Point)
Point.normalize = new_instancemethod(_fifechan.Point_normalize, None, Point)
Point.rotate = new_instancemethod(_fifechan.Point_rotate, None, Point)
Point.set = new_instancemethod(_fifechan.Point_set, None, Point)
Point_swigregister = _fifechan.Point_swigregister
Point_swigregister(Point)

class Widget(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Selection_None = _fifechan.Widget_Selection_None
    Selection_Border = _fifechan.Widget_Selection_Border
    Selection_Background = _fifechan.Widget_Selection_Background
    setGlobalFont = staticmethod(_fifechan.Widget_setGlobalFont)
    __swig_destroy__ = _fifechan.delete_Widget
Widget.getParent = new_instancemethod(_fifechan.Widget_getParent, None, Widget)
Widget.setWidth = new_instancemethod(_fifechan.Widget_setWidth, None, Widget)
Widget.getWidth = new_instancemethod(_fifechan.Widget_getWidth, None, Widget)
Widget.setHeight = new_instancemethod(_fifechan.Widget_setHeight, None, Widget)
Widget.getHeight = new_instancemethod(_fifechan.Widget_getHeight, None, Widget)
Widget.setSize = new_instancemethod(_fifechan.Widget_setSize, None, Widget)
Widget.setX = new_instancemethod(_fifechan.Widget_setX, None, Widget)
Widget.getX = new_instancemethod(_fifechan.Widget_getX, None, Widget)
Widget.setY = new_instancemethod(_fifechan.Widget_setY, None, Widget)
Widget.getY = new_instancemethod(_fifechan.Widget_getY, None, Widget)
Widget.setPosition = new_instancemethod(_fifechan.Widget_setPosition, None, Widget)
Widget.setOutlineSize = new_instancemethod(_fifechan.Widget_setOutlineSize, None, Widget)
Widget.getOutlineSize = new_instancemethod(_fifechan.Widget_getOutlineSize, None, Widget)
Widget.setBorderSize = new_instancemethod(_fifechan.Widget_setBorderSize, None, Widget)
Widget.getBorderSize = new_instancemethod(_fifechan.Widget_getBorderSize, None, Widget)
Widget.setMargin = new_instancemethod(_fifechan.Widget_setMargin, None, Widget)
Widget.setMarginTop = new_instancemethod(_fifechan.Widget_setMarginTop, None, Widget)
Widget.getMarginTop = new_instancemethod(_fifechan.Widget_getMarginTop, None, Widget)
Widget.setMarginRight = new_instancemethod(_fifechan.Widget_setMarginRight, None, Widget)
Widget.getMarginRight = new_instancemethod(_fifechan.Widget_getMarginRight, None, Widget)
Widget.setMarginBottom = new_instancemethod(_fifechan.Widget_setMarginBottom, None, Widget)
Widget.getMarginBottom = new_instancemethod(_fifechan.Widget_getMarginBottom, None, Widget)
Widget.setMarginLeft = new_instancemethod(_fifechan.Widget_setMarginLeft, None, Widget)
Widget.getMarginLeft = new_instancemethod(_fifechan.Widget_getMarginLeft, None, Widget)
Widget.setPadding = new_instancemethod(_fifechan.Widget_setPadding, None, Widget)
Widget.setPaddingTop = new_instancemethod(_fifechan.Widget_setPaddingTop, None, Widget)
Widget.getPaddingTop = new_instancemethod(_fifechan.Widget_getPaddingTop, None, Widget)
Widget.setPaddingRight = new_instancemethod(_fifechan.Widget_setPaddingRight, None, Widget)
Widget.getPaddingRight = new_instancemethod(_fifechan.Widget_getPaddingRight, None, Widget)
Widget.setPaddingBottom = new_instancemethod(_fifechan.Widget_setPaddingBottom, None, Widget)
Widget.getPaddingBottom = new_instancemethod(_fifechan.Widget_getPaddingBottom, None, Widget)
Widget.setPaddingLeft = new_instancemethod(_fifechan.Widget_setPaddingLeft, None, Widget)
Widget.getPaddingLeft = new_instancemethod(_fifechan.Widget_getPaddingLeft, None, Widget)
Widget.setFocusable = new_instancemethod(_fifechan.Widget_setFocusable, None, Widget)
Widget.isFocusable = new_instancemethod(_fifechan.Widget_isFocusable, None, Widget)
Widget.isFocused = new_instancemethod(_fifechan.Widget_isFocused, None, Widget)
Widget.setEnabled = new_instancemethod(_fifechan.Widget_setEnabled, None, Widget)
Widget.isEnabled = new_instancemethod(_fifechan.Widget_isEnabled, None, Widget)
Widget.setVisible = new_instancemethod(_fifechan.Widget_setVisible, None, Widget)
Widget.isVisible = new_instancemethod(_fifechan.Widget_isVisible, None, Widget)
Widget.isSetVisible = new_instancemethod(_fifechan.Widget_isSetVisible, None, Widget)
Widget.setBaseColor = new_instancemethod(_fifechan.Widget_setBaseColor, None, Widget)
Widget.getBaseColor = new_instancemethod(_fifechan.Widget_getBaseColor, None, Widget)
Widget.setForegroundColor = new_instancemethod(_fifechan.Widget_setForegroundColor, None, Widget)
Widget.getForegroundColor = new_instancemethod(_fifechan.Widget_getForegroundColor, None, Widget)
Widget.setBackgroundColor = new_instancemethod(_fifechan.Widget_setBackgroundColor, None, Widget)
Widget.getBackgroundColor = new_instancemethod(_fifechan.Widget_getBackgroundColor, None, Widget)
Widget.setSelectionColor = new_instancemethod(_fifechan.Widget_setSelectionColor, None, Widget)
Widget.getSelectionColor = new_instancemethod(_fifechan.Widget_getSelectionColor, None, Widget)
Widget.setOutlineColor = new_instancemethod(_fifechan.Widget_setOutlineColor, None, Widget)
Widget.getOutlineColor = new_instancemethod(_fifechan.Widget_getOutlineColor, None, Widget)
Widget.setBorderColor = new_instancemethod(_fifechan.Widget_setBorderColor, None, Widget)
Widget.getBorderColor = new_instancemethod(_fifechan.Widget_getBorderColor, None, Widget)
Widget.setSelectionMode = new_instancemethod(_fifechan.Widget_setSelectionMode, None, Widget)
Widget.getSelectionMode = new_instancemethod(_fifechan.Widget_getSelectionMode, None, Widget)
Widget.setMinSize = new_instancemethod(_fifechan.Widget_setMinSize, None, Widget)
Widget.getMinSize = new_instancemethod(_fifechan.Widget_getMinSize, None, Widget)
Widget.setMaxSize = new_instancemethod(_fifechan.Widget_setMaxSize, None, Widget)
Widget.getMaxSize = new_instancemethod(_fifechan.Widget_getMaxSize, None, Widget)
Widget.setFixedSize = new_instancemethod(_fifechan.Widget_setFixedSize, None, Widget)
Widget.getFixedSize = new_instancemethod(_fifechan.Widget_getFixedSize, None, Widget)
Widget.isFixedSize = new_instancemethod(_fifechan.Widget_isFixedSize, None, Widget)
Widget.setVerticalExpand = new_instancemethod(_fifechan.Widget_setVerticalExpand, None, Widget)
Widget.isVerticalExpand = new_instancemethod(_fifechan.Widget_isVerticalExpand, None, Widget)
Widget.setHorizontalExpand = new_instancemethod(_fifechan.Widget_setHorizontalExpand, None, Widget)
Widget.isHorizontalExpand = new_instancemethod(_fifechan.Widget_isHorizontalExpand, None, Widget)
Widget.isLayouted = new_instancemethod(_fifechan.Widget_isLayouted, None, Widget)
Widget.adaptLayout = new_instancemethod(_fifechan.Widget_adaptLayout, None, Widget)
Widget.resizeToContent = new_instancemethod(_fifechan.Widget_resizeToContent, None, Widget)
Widget.adjustSize = new_instancemethod(_fifechan.Widget_adjustSize, None, Widget)
Widget.expandContent = new_instancemethod(_fifechan.Widget_expandContent, None, Widget)
Widget.requestFocus = new_instancemethod(_fifechan.Widget_requestFocus, None, Widget)
Widget.requestMoveToTop = new_instancemethod(_fifechan.Widget_requestMoveToTop, None, Widget)
Widget.requestMoveToBottom = new_instancemethod(_fifechan.Widget_requestMoveToBottom, None, Widget)
Widget.setActionEventId = new_instancemethod(_fifechan.Widget_setActionEventId, None, Widget)
Widget.getActionEventId = new_instancemethod(_fifechan.Widget_getActionEventId, None, Widget)
Widget.getAbsolutePosition = new_instancemethod(_fifechan.Widget_getAbsolutePosition, None, Widget)
Widget.getFont = new_instancemethod(_fifechan.Widget_getFont, None, Widget)
Widget.setFont = new_instancemethod(_fifechan.Widget_setFont, None, Widget)
Widget.isTabInEnabled = new_instancemethod(_fifechan.Widget_isTabInEnabled, None, Widget)
Widget.setTabInEnabled = new_instancemethod(_fifechan.Widget_setTabInEnabled, None, Widget)
Widget.isTabOutEnabled = new_instancemethod(_fifechan.Widget_isTabOutEnabled, None, Widget)
Widget.setTabOutEnabled = new_instancemethod(_fifechan.Widget_setTabOutEnabled, None, Widget)
Widget.isModalFocusable = new_instancemethod(_fifechan.Widget_isModalFocusable, None, Widget)
Widget.isModalMouseInputFocusable = new_instancemethod(_fifechan.Widget_isModalMouseInputFocusable, None, Widget)
Widget.requestModalFocus = new_instancemethod(_fifechan.Widget_requestModalFocus, None, Widget)
Widget.requestModalMouseInputFocus = new_instancemethod(_fifechan.Widget_requestModalMouseInputFocus, None, Widget)
Widget.releaseModalFocus = new_instancemethod(_fifechan.Widget_releaseModalFocus, None, Widget)
Widget.releaseModalMouseInputFocus = new_instancemethod(_fifechan.Widget_releaseModalMouseInputFocus, None, Widget)
Widget.isModalFocused = new_instancemethod(_fifechan.Widget_isModalFocused, None, Widget)
Widget.isModalMouseInputFocused = new_instancemethod(_fifechan.Widget_isModalMouseInputFocused, None, Widget)
Widget.getWidgetAt = new_instancemethod(_fifechan.Widget_getWidgetAt, None, Widget)
Widget.moveToTop = new_instancemethod(_fifechan.Widget_moveToTop, None, Widget)
Widget.moveToBottom = new_instancemethod(_fifechan.Widget_moveToBottom, None, Widget)
Widget.focusNext = new_instancemethod(_fifechan.Widget_focusNext, None, Widget)
Widget.focusPrevious = new_instancemethod(_fifechan.Widget_focusPrevious, None, Widget)
Widget.addActionListener = new_instancemethod(_fifechan.Widget_addActionListener, None, Widget)
Widget.removeActionListener = new_instancemethod(_fifechan.Widget_removeActionListener, None, Widget)
Widget.addMouseListener = new_instancemethod(_fifechan.Widget_addMouseListener, None, Widget)
Widget.removeMouseListener = new_instancemethod(_fifechan.Widget_removeMouseListener, None, Widget)
Widget.addKeyListener = new_instancemethod(_fifechan.Widget_addKeyListener, None, Widget)
Widget.removeKeyListener = new_instancemethod(_fifechan.Widget_removeKeyListener, None, Widget)
Widget.addWidgetListener = new_instancemethod(_fifechan.Widget_addWidgetListener, None, Widget)
Widget.removeWidgetListener = new_instancemethod(_fifechan.Widget_removeWidgetListener, None, Widget)
Widget.draw = new_instancemethod(_fifechan.Widget_draw, None, Widget)
Widget_swigregister = _fifechan.Widget_swigregister
Widget_swigregister(Widget)

def Widget_setGlobalFont(font):
    return _fifechan.Widget_setGlobalFont(font)
Widget_setGlobalFont = _fifechan.Widget_setGlobalFont

class Spacer(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _fifechan.Spacer_swiginit(self, _fifechan.new_Spacer())
    __swig_destroy__ = _fifechan.delete_Spacer
Spacer.resizeToContent = new_instancemethod(_fifechan.Spacer_resizeToContent, None, Spacer)
Spacer_swigregister = _fifechan.Spacer_swigregister
Spacer_swigregister(Spacer)

class Container(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _fifechan.Container_swiginit(self, _fifechan.new_Container())
    __swig_destroy__ = _fifechan.delete_Container
    Absolute = _fifechan.Container_Absolute
    AutoSize = _fifechan.Container_AutoSize
    Vertical = _fifechan.Container_Vertical
    Horizontal = _fifechan.Container_Horizontal
    Circular = _fifechan.Container_Circular
Container.setOpaque = new_instancemethod(_fifechan.Container_setOpaque, None, Container)
Container.isOpaque = new_instancemethod(_fifechan.Container_isOpaque, None, Container)
Container.add = new_instancemethod(_fifechan.Container_add, None, Container)
Container.remove = new_instancemethod(_fifechan.Container_remove, None, Container)
Container.clear = new_instancemethod(_fifechan.Container_clear, None, Container)
Container.setLayout = new_instancemethod(_fifechan.Container_setLayout, None, Container)
Container.getLayout = new_instancemethod(_fifechan.Container_getLayout, None, Container)
Container.setUniformSize = new_instancemethod(_fifechan.Container_setUniformSize, None, Container)
Container.isUniformSize = new_instancemethod(_fifechan.Container_isUniformSize, None, Container)
Container.setVerticalSpacing = new_instancemethod(_fifechan.Container_setVerticalSpacing, None, Container)
Container.getVerticalSpacing = new_instancemethod(_fifechan.Container_getVerticalSpacing, None, Container)
Container.setHorizontalSpacing = new_instancemethod(_fifechan.Container_setHorizontalSpacing, None, Container)
Container.getHorizontalSpacing = new_instancemethod(_fifechan.Container_getHorizontalSpacing, None, Container)
Container.setBackgroundWidget = new_instancemethod(_fifechan.Container_setBackgroundWidget, None, Container)
Container.getBackgroundWidget = new_instancemethod(_fifechan.Container_getBackgroundWidget, None, Container)
Container_swigregister = _fifechan.Container_swigregister
Container_swigregister(Container)

class Button(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.Button_swiginit(self, _fifechan.new_Button(*args))
    __swig_destroy__ = _fifechan.delete_Button
Button.setCaption = new_instancemethod(_fifechan.Button_setCaption, None, Button)
Button.getCaption = new_instancemethod(_fifechan.Button_getCaption, None, Button)
Button.setActive = new_instancemethod(_fifechan.Button_setActive, None, Button)
Button.isActive = new_instancemethod(_fifechan.Button_isActive, None, Button)
Button.setAlignment = new_instancemethod(_fifechan.Button_setAlignment, None, Button)
Button.getAlignment = new_instancemethod(_fifechan.Button_getAlignment, None, Button)
Button.setDownXOffset = new_instancemethod(_fifechan.Button_setDownXOffset, None, Button)
Button.getDownXOffset = new_instancemethod(_fifechan.Button_getDownXOffset, None, Button)
Button.setDownYOffset = new_instancemethod(_fifechan.Button_setDownYOffset, None, Button)
Button.getDownYOffset = new_instancemethod(_fifechan.Button_getDownYOffset, None, Button)
Button.setDownOffset = new_instancemethod(_fifechan.Button_setDownOffset, None, Button)
Button.adjustSize = new_instancemethod(_fifechan.Button_adjustSize, None, Button)
Button_swigregister = _fifechan.Button_swigregister
Button_swigregister(Button)

class ImageButton(Button):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.ImageButton_swiginit(self, _fifechan.new_ImageButton(*args))
    __swig_destroy__ = _fifechan.delete_ImageButton
ImageButton.setUpImage = new_instancemethod(_fifechan.ImageButton_setUpImage, None, ImageButton)
ImageButton.getUpImage = new_instancemethod(_fifechan.ImageButton_getUpImage, None, ImageButton)
ImageButton.setDownImage = new_instancemethod(_fifechan.ImageButton_setDownImage, None, ImageButton)
ImageButton.getDownImage = new_instancemethod(_fifechan.ImageButton_getDownImage, None, ImageButton)
ImageButton.setHoverImage = new_instancemethod(_fifechan.ImageButton_setHoverImage, None, ImageButton)
ImageButton.getHoverImage = new_instancemethod(_fifechan.ImageButton_getHoverImage, None, ImageButton)
ImageButton.setInactiveUpImage = new_instancemethod(_fifechan.ImageButton_setInactiveUpImage, None, ImageButton)
ImageButton.getInactiveUpImage = new_instancemethod(_fifechan.ImageButton_getInactiveUpImage, None, ImageButton)
ImageButton.setInactiveDownImage = new_instancemethod(_fifechan.ImageButton_setInactiveDownImage, None, ImageButton)
ImageButton.getInactiveDownImage = new_instancemethod(_fifechan.ImageButton_getInactiveDownImage, None, ImageButton)
ImageButton.setInactiveHoverImage = new_instancemethod(_fifechan.ImageButton_setInactiveHoverImage, None, ImageButton)
ImageButton.getInactiveHoverImage = new_instancemethod(_fifechan.ImageButton_getInactiveHoverImage, None, ImageButton)
ImageButton.resizeToContent = new_instancemethod(_fifechan.ImageButton_resizeToContent, None, ImageButton)
ImageButton.adjustSize = new_instancemethod(_fifechan.ImageButton_adjustSize, None, ImageButton)
ImageButton_swigregister = _fifechan.ImageButton_swigregister
ImageButton_swigregister(ImageButton)

class ToggleButton(ImageButton):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.ToggleButton_swiginit(self, _fifechan.new_ToggleButton(*args))
    __swig_destroy__ = _fifechan.delete_ToggleButton
ToggleButton.isSelected = new_instancemethod(_fifechan.ToggleButton_isSelected, None, ToggleButton)
ToggleButton.setSelected = new_instancemethod(_fifechan.ToggleButton_setSelected, None, ToggleButton)
ToggleButton.toggleSelected = new_instancemethod(_fifechan.ToggleButton_toggleSelected, None, ToggleButton)
ToggleButton.setGroup = new_instancemethod(_fifechan.ToggleButton_setGroup, None, ToggleButton)
ToggleButton.getGroup = new_instancemethod(_fifechan.ToggleButton_getGroup, None, ToggleButton)
ToggleButton_swigregister = _fifechan.ToggleButton_swigregister
ToggleButton_swigregister(ToggleButton)

class CheckBox(ImageButton):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Marker_Checkmark = _fifechan.CheckBox_Marker_Checkmark
    Marker_Cross = _fifechan.CheckBox_Marker_Cross
    Marker_Dot = _fifechan.CheckBox_Marker_Dot
    Marker_Rhombus = _fifechan.CheckBox_Marker_Rhombus
    Marker_Image = _fifechan.CheckBox_Marker_Image

    def __init__(self):
        _fifechan.CheckBox_swiginit(self, _fifechan.new_CheckBox())
    __swig_destroy__ = _fifechan.delete_CheckBox
CheckBox.isSelected = new_instancemethod(_fifechan.CheckBox_isSelected, None, CheckBox)
CheckBox.setSelected = new_instancemethod(_fifechan.CheckBox_setSelected, None, CheckBox)
CheckBox.toggleSelected = new_instancemethod(_fifechan.CheckBox_toggleSelected, None, CheckBox)
CheckBox.setBackgroundImage = new_instancemethod(_fifechan.CheckBox_setBackgroundImage, None, CheckBox)
CheckBox.getBackgroundImage = new_instancemethod(_fifechan.CheckBox_getBackgroundImage, None, CheckBox)
CheckBox.getMarkerStyle = new_instancemethod(_fifechan.CheckBox_getMarkerStyle, None, CheckBox)
CheckBox.setMarkerStyle = new_instancemethod(_fifechan.CheckBox_setMarkerStyle, None, CheckBox)
CheckBox.adjustSize = new_instancemethod(_fifechan.CheckBox_adjustSize, None, CheckBox)
CheckBox_swigregister = _fifechan.CheckBox_swigregister
CheckBox_swigregister(CheckBox)

class Icon(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, image):
        _fifechan.Icon_swiginit(self, _fifechan.new_Icon(image))
    __swig_destroy__ = _fifechan.delete_Icon
Icon.setImage = new_instancemethod(_fifechan.Icon_setImage, None, Icon)
Icon.getImage = new_instancemethod(_fifechan.Icon_getImage, None, Icon)
Icon.isScaling = new_instancemethod(_fifechan.Icon_isScaling, None, Icon)
Icon.setScaling = new_instancemethod(_fifechan.Icon_setScaling, None, Icon)
Icon.isTiling = new_instancemethod(_fifechan.Icon_isTiling, None, Icon)
Icon.setTiling = new_instancemethod(_fifechan.Icon_setTiling, None, Icon)
Icon.setOpaque = new_instancemethod(_fifechan.Icon_setOpaque, None, Icon)
Icon.isOpaque = new_instancemethod(_fifechan.Icon_isOpaque, None, Icon)
Icon.adjustSize = new_instancemethod(_fifechan.Icon_adjustSize, None, Icon)
Icon_swigregister = _fifechan.Icon_swigregister
Icon_swigregister(Icon)

class ScrollArea(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.ScrollArea_swiginit(self, _fifechan.new_ScrollArea(*args))
    __swig_destroy__ = _fifechan.delete_ScrollArea
    ShowAlways = _fifechan.ScrollArea_ShowAlways
    ShowNever = _fifechan.ScrollArea_ShowNever
    ShowAuto = _fifechan.ScrollArea_ShowAuto
ScrollArea.setContent = new_instancemethod(_fifechan.ScrollArea_setContent, None, ScrollArea)
ScrollArea.getContent = new_instancemethod(_fifechan.ScrollArea_getContent, None, ScrollArea)
ScrollArea.setHorizontalScrollPolicy = new_instancemethod(_fifechan.ScrollArea_setHorizontalScrollPolicy, None, ScrollArea)
ScrollArea.getHorizontalScrollPolicy = new_instancemethod(_fifechan.ScrollArea_getHorizontalScrollPolicy, None, ScrollArea)
ScrollArea.setVerticalScrollPolicy = new_instancemethod(_fifechan.ScrollArea_setVerticalScrollPolicy, None, ScrollArea)
ScrollArea.getVerticalScrollPolicy = new_instancemethod(_fifechan.ScrollArea_getVerticalScrollPolicy, None, ScrollArea)
ScrollArea.setScrollPolicy = new_instancemethod(_fifechan.ScrollArea_setScrollPolicy, None, ScrollArea)
ScrollArea.setVerticalScrollAmount = new_instancemethod(_fifechan.ScrollArea_setVerticalScrollAmount, None, ScrollArea)
ScrollArea.getVerticalScrollAmount = new_instancemethod(_fifechan.ScrollArea_getVerticalScrollAmount, None, ScrollArea)
ScrollArea.setHorizontalScrollAmount = new_instancemethod(_fifechan.ScrollArea_setHorizontalScrollAmount, None, ScrollArea)
ScrollArea.getHorizontalScrollAmount = new_instancemethod(_fifechan.ScrollArea_getHorizontalScrollAmount, None, ScrollArea)
ScrollArea.setScrollAmount = new_instancemethod(_fifechan.ScrollArea_setScrollAmount, None, ScrollArea)
ScrollArea.getHorizontalMaxScroll = new_instancemethod(_fifechan.ScrollArea_getHorizontalMaxScroll, None, ScrollArea)
ScrollArea.getVerticalMaxScroll = new_instancemethod(_fifechan.ScrollArea_getVerticalMaxScroll, None, ScrollArea)
ScrollArea.setScrollbarWidth = new_instancemethod(_fifechan.ScrollArea_setScrollbarWidth, None, ScrollArea)
ScrollArea.getScrollbarWidth = new_instancemethod(_fifechan.ScrollArea_getScrollbarWidth, None, ScrollArea)
ScrollArea.setLeftButtonScrollAmount = new_instancemethod(_fifechan.ScrollArea_setLeftButtonScrollAmount, None, ScrollArea)
ScrollArea.setRightButtonScrollAmount = new_instancemethod(_fifechan.ScrollArea_setRightButtonScrollAmount, None, ScrollArea)
ScrollArea.setUpButtonScrollAmount = new_instancemethod(_fifechan.ScrollArea_setUpButtonScrollAmount, None, ScrollArea)
ScrollArea.setDownButtonScrollAmount = new_instancemethod(_fifechan.ScrollArea_setDownButtonScrollAmount, None, ScrollArea)
ScrollArea.getLeftButtonScrollAmount = new_instancemethod(_fifechan.ScrollArea_getLeftButtonScrollAmount, None, ScrollArea)
ScrollArea.getRightButtonScrollAmount = new_instancemethod(_fifechan.ScrollArea_getRightButtonScrollAmount, None, ScrollArea)
ScrollArea.getUpButtonScrollAmount = new_instancemethod(_fifechan.ScrollArea_getUpButtonScrollAmount, None, ScrollArea)
ScrollArea.getDownButtonScrollAmount = new_instancemethod(_fifechan.ScrollArea_getDownButtonScrollAmount, None, ScrollArea)
ScrollArea_swigregister = _fifechan.ScrollArea_swigregister
ScrollArea_swigregister(ScrollArea)

class ListModel(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _fifechan.delete_ListModel

    def __init__(self):
        if self.__class__ == ListModel:
            _self = None
        else:
            _self = self
        _fifechan.ListModel_swiginit(self, _fifechan.new_ListModel(_self, ))
    def __disown__(self):
        self.this.disown()
        _fifechan.disown_ListModel(self)
        return weakref_proxy(self)
ListModel.getNumberOfElements = new_instancemethod(_fifechan.ListModel_getNumberOfElements, None, ListModel)
ListModel.getElementAt = new_instancemethod(_fifechan.ListModel_getElementAt, None, ListModel)
ListModel_swigregister = _fifechan.ListModel_swigregister
ListModel_swigregister(ListModel)

class ListBox(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.ListBox_swiginit(self, _fifechan.new_ListBox(*args))
    __swig_destroy__ = _fifechan.delete_ListBox
ListBox.getSelected = new_instancemethod(_fifechan.ListBox_getSelected, None, ListBox)
ListBox.setSelected = new_instancemethod(_fifechan.ListBox_setSelected, None, ListBox)
ListBox.setListModel = new_instancemethod(_fifechan.ListBox_setListModel, None, ListBox)
ListBox.getListModel = new_instancemethod(_fifechan.ListBox_getListModel, None, ListBox)
ListBox.adjustSize = new_instancemethod(_fifechan.ListBox_adjustSize, None, ListBox)
ListBox.isWrappingEnabled = new_instancemethod(_fifechan.ListBox_isWrappingEnabled, None, ListBox)
ListBox.setWrappingEnabled = new_instancemethod(_fifechan.ListBox_setWrappingEnabled, None, ListBox)
ListBox_swigregister = _fifechan.ListBox_swigregister
ListBox_swigregister(ListBox)

class DropDown(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, listModel=None, scrollArea=None, listBox=None):
        _fifechan.DropDown_swiginit(self, _fifechan.new_DropDown(listModel, scrollArea, listBox))
    __swig_destroy__ = _fifechan.delete_DropDown
DropDown.getSelected = new_instancemethod(_fifechan.DropDown_getSelected, None, DropDown)
DropDown.setSelected = new_instancemethod(_fifechan.DropDown_setSelected, None, DropDown)
DropDown.setListModel = new_instancemethod(_fifechan.DropDown_setListModel, None, DropDown)
DropDown.getListModel = new_instancemethod(_fifechan.DropDown_getListModel, None, DropDown)
DropDown.adjustHeight = new_instancemethod(_fifechan.DropDown_adjustHeight, None, DropDown)
DropDown.setBaseColor = new_instancemethod(_fifechan.DropDown_setBaseColor, None, DropDown)
DropDown.getBaseColor = new_instancemethod(_fifechan.DropDown_getBaseColor, None, DropDown)
DropDown.setForegroundColor = new_instancemethod(_fifechan.DropDown_setForegroundColor, None, DropDown)
DropDown.getForegroundColor = new_instancemethod(_fifechan.DropDown_getForegroundColor, None, DropDown)
DropDown.setBackgroundColor = new_instancemethod(_fifechan.DropDown_setBackgroundColor, None, DropDown)
DropDown.getBackgroundColor = new_instancemethod(_fifechan.DropDown_getBackgroundColor, None, DropDown)
DropDown.setSelectionColor = new_instancemethod(_fifechan.DropDown_setSelectionColor, None, DropDown)
DropDown.getSelectionColor = new_instancemethod(_fifechan.DropDown_getSelectionColor, None, DropDown)
DropDown_swigregister = _fifechan.DropDown_swigregister
DropDown_swigregister(DropDown)

class RadioButton(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.RadioButton_swiginit(self, _fifechan.new_RadioButton(*args))
    __swig_destroy__ = _fifechan.delete_RadioButton
RadioButton.isSelected = new_instancemethod(_fifechan.RadioButton_isSelected, None, RadioButton)
RadioButton.setSelected = new_instancemethod(_fifechan.RadioButton_setSelected, None, RadioButton)
RadioButton.getCaption = new_instancemethod(_fifechan.RadioButton_getCaption, None, RadioButton)
RadioButton.setCaption = new_instancemethod(_fifechan.RadioButton_setCaption, None, RadioButton)
RadioButton.setGroup = new_instancemethod(_fifechan.RadioButton_setGroup, None, RadioButton)
RadioButton.getGroup = new_instancemethod(_fifechan.RadioButton_getGroup, None, RadioButton)
RadioButton.adjustSize = new_instancemethod(_fifechan.RadioButton_adjustSize, None, RadioButton)
RadioButton_swigregister = _fifechan.RadioButton_swigregister
RadioButton_swigregister(RadioButton)

class Slider(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.Slider_swiginit(self, _fifechan.new_Slider(*args))
    __swig_destroy__ = _fifechan.delete_Slider
    Horizontal = _fifechan.Slider_Horizontal
    Vertical = _fifechan.Slider_Vertical
Slider.setScale = new_instancemethod(_fifechan.Slider_setScale, None, Slider)
Slider.getScaleStart = new_instancemethod(_fifechan.Slider_getScaleStart, None, Slider)
Slider.setScaleStart = new_instancemethod(_fifechan.Slider_setScaleStart, None, Slider)
Slider.getScaleEnd = new_instancemethod(_fifechan.Slider_getScaleEnd, None, Slider)
Slider.setScaleEnd = new_instancemethod(_fifechan.Slider_setScaleEnd, None, Slider)
Slider.getValue = new_instancemethod(_fifechan.Slider_getValue, None, Slider)
Slider.setValue = new_instancemethod(_fifechan.Slider_setValue, None, Slider)
Slider.setMarkerLength = new_instancemethod(_fifechan.Slider_setMarkerLength, None, Slider)
Slider.getMarkerLength = new_instancemethod(_fifechan.Slider_getMarkerLength, None, Slider)
Slider.setOrientation = new_instancemethod(_fifechan.Slider_setOrientation, None, Slider)
Slider.getOrientation = new_instancemethod(_fifechan.Slider_getOrientation, None, Slider)
Slider.setStepLength = new_instancemethod(_fifechan.Slider_setStepLength, None, Slider)
Slider.getStepLength = new_instancemethod(_fifechan.Slider_getStepLength, None, Slider)
Slider_swigregister = _fifechan.Slider_swigregister
Slider_swigregister(Slider)

class Window(Container):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.Window_swiginit(self, _fifechan.new_Window(*args))
    __swig_destroy__ = _fifechan.delete_Window
Window.setCaption = new_instancemethod(_fifechan.Window_setCaption, None, Window)
Window.getCaption = new_instancemethod(_fifechan.Window_getCaption, None, Window)
Window.setAlignment = new_instancemethod(_fifechan.Window_setAlignment, None, Window)
Window.getAlignment = new_instancemethod(_fifechan.Window_getAlignment, None, Window)
Window.setTitleBarHeight = new_instancemethod(_fifechan.Window_setTitleBarHeight, None, Window)
Window.getTitleBarHeight = new_instancemethod(_fifechan.Window_getTitleBarHeight, None, Window)
Window.setMovable = new_instancemethod(_fifechan.Window_setMovable, None, Window)
Window.isMovable = new_instancemethod(_fifechan.Window_isMovable, None, Window)
Window.setOpaque = new_instancemethod(_fifechan.Window_setOpaque, None, Window)
Window.isOpaque = new_instancemethod(_fifechan.Window_isOpaque, None, Window)
Window.resizeToContent = new_instancemethod(_fifechan.Window_resizeToContent, None, Window)
Window_swigregister = _fifechan.Window_swigregister
Window_swigregister(Window)

class AdjustingContainer(Container):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _fifechan.AdjustingContainer_swiginit(self, _fifechan.new_AdjustingContainer())
    __swig_destroy__ = _fifechan.delete_AdjustingContainer
    LEFT = _fifechan.AdjustingContainer_LEFT
    CENTER = _fifechan.AdjustingContainer_CENTER
    RIGHT = _fifechan.AdjustingContainer_RIGHT
AdjustingContainer.setNumberOfColumns = new_instancemethod(_fifechan.AdjustingContainer_setNumberOfColumns, None, AdjustingContainer)
AdjustingContainer.getNumberOfColumns = new_instancemethod(_fifechan.AdjustingContainer_getNumberOfColumns, None, AdjustingContainer)
AdjustingContainer.setColumnAlignment = new_instancemethod(_fifechan.AdjustingContainer_setColumnAlignment, None, AdjustingContainer)
AdjustingContainer.getColumnAlignment = new_instancemethod(_fifechan.AdjustingContainer_getColumnAlignment, None, AdjustingContainer)
AdjustingContainer.adjustContent = new_instancemethod(_fifechan.AdjustingContainer_adjustContent, None, AdjustingContainer)
AdjustingContainer_swigregister = _fifechan.AdjustingContainer_swigregister
AdjustingContainer_swigregister(AdjustingContainer)

class FlowContainer(Container):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _fifechan.FlowContainer_swiginit(self, _fifechan.new_FlowContainer())
    __swig_destroy__ = _fifechan.delete_FlowContainer
    Left = _fifechan.FlowContainer_Left
    Right = _fifechan.FlowContainer_Right
    Top = _fifechan.FlowContainer_Top
    Bottom = _fifechan.FlowContainer_Bottom
    Center = _fifechan.FlowContainer_Center
FlowContainer.setAlignment = new_instancemethod(_fifechan.FlowContainer_setAlignment, None, FlowContainer)
FlowContainer.getAlignment = new_instancemethod(_fifechan.FlowContainer_getAlignment, None, FlowContainer)
FlowContainer.adjustContent = new_instancemethod(_fifechan.FlowContainer_adjustContent, None, FlowContainer)
FlowContainer_swigregister = _fifechan.FlowContainer_swigregister
FlowContainer_swigregister(FlowContainer)

class TextBox(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.TextBox_swiginit(self, _fifechan.new_TextBox(*args))
    __swig_destroy__ = _fifechan.delete_TextBox
TextBox.setText = new_instancemethod(_fifechan.TextBox_setText, None, TextBox)
TextBox.getText = new_instancemethod(_fifechan.TextBox_getText, None, TextBox)
TextBox.getTextRow = new_instancemethod(_fifechan.TextBox_getTextRow, None, TextBox)
TextBox.setTextRow = new_instancemethod(_fifechan.TextBox_setTextRow, None, TextBox)
TextBox.getNumberOfRows = new_instancemethod(_fifechan.TextBox_getNumberOfRows, None, TextBox)
TextBox.getCaretPosition = new_instancemethod(_fifechan.TextBox_getCaretPosition, None, TextBox)
TextBox.setCaretPosition = new_instancemethod(_fifechan.TextBox_setCaretPosition, None, TextBox)
TextBox.getCaretRow = new_instancemethod(_fifechan.TextBox_getCaretRow, None, TextBox)
TextBox.setCaretRow = new_instancemethod(_fifechan.TextBox_setCaretRow, None, TextBox)
TextBox.getCaretColumn = new_instancemethod(_fifechan.TextBox_getCaretColumn, None, TextBox)
TextBox.setCaretColumn = new_instancemethod(_fifechan.TextBox_setCaretColumn, None, TextBox)
TextBox.setCaretRowColumn = new_instancemethod(_fifechan.TextBox_setCaretRowColumn, None, TextBox)
TextBox.scrollToCaret = new_instancemethod(_fifechan.TextBox_scrollToCaret, None, TextBox)
TextBox.isEditable = new_instancemethod(_fifechan.TextBox_isEditable, None, TextBox)
TextBox.setEditable = new_instancemethod(_fifechan.TextBox_setEditable, None, TextBox)
TextBox.addRow = new_instancemethod(_fifechan.TextBox_addRow, None, TextBox)
TextBox.isOpaque = new_instancemethod(_fifechan.TextBox_isOpaque, None, TextBox)
TextBox.setOpaque = new_instancemethod(_fifechan.TextBox_setOpaque, None, TextBox)
TextBox_swigregister = _fifechan.TextBox_swigregister
TextBox_swigregister(TextBox)

class TextField(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.TextField_swiginit(self, _fifechan.new_TextField(*args))
    __swig_destroy__ = _fifechan.delete_TextField
TextField.setText = new_instancemethod(_fifechan.TextField_setText, None, TextField)
TextField.getText = new_instancemethod(_fifechan.TextField_getText, None, TextField)
TextField.adjustSize = new_instancemethod(_fifechan.TextField_adjustSize, None, TextField)
TextField.adjustHeight = new_instancemethod(_fifechan.TextField_adjustHeight, None, TextField)
TextField.setCaretPosition = new_instancemethod(_fifechan.TextField_setCaretPosition, None, TextField)
TextField.getCaretPosition = new_instancemethod(_fifechan.TextField_getCaretPosition, None, TextField)
TextField_swigregister = _fifechan.TextField_swigregister
TextField_swigregister(TextField)

class PasswordField(TextField):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        _fifechan.PasswordField_swiginit(self, _fifechan.new_PasswordField(*args, **kwargs))
    __swig_destroy__ = _fifechan.delete_PasswordField
PasswordField_swigregister = _fifechan.PasswordField_swigregister
PasswordField_swigregister(PasswordField)

class IconProgressBar(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.IconProgressBar_swiginit(self, _fifechan.new_IconProgressBar(*args))
    __swig_destroy__ = _fifechan.delete_IconProgressBar
    HORIZONTAL = _fifechan.IconProgressBar_HORIZONTAL
    VERTICAL = _fifechan.IconProgressBar_VERTICAL
IconProgressBar.setImage = new_instancemethod(_fifechan.IconProgressBar_setImage, None, IconProgressBar)
IconProgressBar.getImage = new_instancemethod(_fifechan.IconProgressBar_getImage, None, IconProgressBar)
IconProgressBar.setMaxIcons = new_instancemethod(_fifechan.IconProgressBar_setMaxIcons, None, IconProgressBar)
IconProgressBar.getMaxIcons = new_instancemethod(_fifechan.IconProgressBar_getMaxIcons, None, IconProgressBar)
IconProgressBar.setOrientation = new_instancemethod(_fifechan.IconProgressBar_setOrientation, None, IconProgressBar)
IconProgressBar.getOrientation = new_instancemethod(_fifechan.IconProgressBar_getOrientation, None, IconProgressBar)
IconProgressBar.advance = new_instancemethod(_fifechan.IconProgressBar_advance, None, IconProgressBar)
IconProgressBar.reset = new_instancemethod(_fifechan.IconProgressBar_reset, None, IconProgressBar)
IconProgressBar.setIconCount = new_instancemethod(_fifechan.IconProgressBar_setIconCount, None, IconProgressBar)
IconProgressBar.getIconCount = new_instancemethod(_fifechan.IconProgressBar_getIconCount, None, IconProgressBar)
IconProgressBar.setOpaque = new_instancemethod(_fifechan.IconProgressBar_setOpaque, None, IconProgressBar)
IconProgressBar.isOpaque = new_instancemethod(_fifechan.IconProgressBar_isOpaque, None, IconProgressBar)
IconProgressBar_swigregister = _fifechan.IconProgressBar_swigregister
IconProgressBar_swigregister(IconProgressBar)

class ImageProgressBar(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.ImageProgressBar_swiginit(self, _fifechan.new_ImageProgressBar(*args))
    __swig_destroy__ = _fifechan.delete_ImageProgressBar
    HORIZONTAL = _fifechan.ImageProgressBar_HORIZONTAL
    VERTICAL = _fifechan.ImageProgressBar_VERTICAL
ImageProgressBar.setBarImage = new_instancemethod(_fifechan.ImageProgressBar_setBarImage, None, ImageProgressBar)
ImageProgressBar.getBarImage = new_instancemethod(_fifechan.ImageProgressBar_getBarImage, None, ImageProgressBar)
ImageProgressBar.setForegroundImage = new_instancemethod(_fifechan.ImageProgressBar_setForegroundImage, None, ImageProgressBar)
ImageProgressBar.getForegroundImage = new_instancemethod(_fifechan.ImageProgressBar_getForegroundImage, None, ImageProgressBar)
ImageProgressBar.setMaxValue = new_instancemethod(_fifechan.ImageProgressBar_setMaxValue, None, ImageProgressBar)
ImageProgressBar.getMaxValue = new_instancemethod(_fifechan.ImageProgressBar_getMaxValue, None, ImageProgressBar)
ImageProgressBar.setValue = new_instancemethod(_fifechan.ImageProgressBar_setValue, None, ImageProgressBar)
ImageProgressBar.getValue = new_instancemethod(_fifechan.ImageProgressBar_getValue, None, ImageProgressBar)
ImageProgressBar.setOrientation = new_instancemethod(_fifechan.ImageProgressBar_setOrientation, None, ImageProgressBar)
ImageProgressBar.getOrientation = new_instancemethod(_fifechan.ImageProgressBar_getOrientation, None, ImageProgressBar)
ImageProgressBar.setOpaque = new_instancemethod(_fifechan.ImageProgressBar_setOpaque, None, ImageProgressBar)
ImageProgressBar.isOpaque = new_instancemethod(_fifechan.ImageProgressBar_isOpaque, None, ImageProgressBar)
ImageProgressBar_swigregister = _fifechan.ImageProgressBar_swigregister
ImageProgressBar_swigregister(ImageProgressBar)

class Tab(Container):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _fifechan.Tab_swiginit(self, _fifechan.new_Tab())
    __swig_destroy__ = _fifechan.delete_Tab
Tab.setTabbedArea = new_instancemethod(_fifechan.Tab_setTabbedArea, None, Tab)
Tab.getTabbedArea = new_instancemethod(_fifechan.Tab_getTabbedArea, None, Tab)
Tab_swigregister = _fifechan.Tab_swigregister
Tab_swigregister(Tab)

class TabbedArea(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _fifechan.TabbedArea_swiginit(self, _fifechan.new_TabbedArea())
    __swig_destroy__ = _fifechan.delete_TabbedArea
TabbedArea.setOpaque = new_instancemethod(_fifechan.TabbedArea_setOpaque, None, TabbedArea)
TabbedArea.isOpaque = new_instancemethod(_fifechan.TabbedArea_isOpaque, None, TabbedArea)
TabbedArea.addTab = new_instancemethod(_fifechan.TabbedArea_addTab, None, TabbedArea)
TabbedArea.removeTabWithIndex = new_instancemethod(_fifechan.TabbedArea_removeTabWithIndex, None, TabbedArea)
TabbedArea.removeTab = new_instancemethod(_fifechan.TabbedArea_removeTab, None, TabbedArea)
TabbedArea.getNumberOfTabs = new_instancemethod(_fifechan.TabbedArea_getNumberOfTabs, None, TabbedArea)
TabbedArea.isTabSelected = new_instancemethod(_fifechan.TabbedArea_isTabSelected, None, TabbedArea)
TabbedArea.setSelectedTab = new_instancemethod(_fifechan.TabbedArea_setSelectedTab, None, TabbedArea)
TabbedArea.getSelectedTabIndex = new_instancemethod(_fifechan.TabbedArea_getSelectedTabIndex, None, TabbedArea)
TabbedArea.getSelectedTab = new_instancemethod(_fifechan.TabbedArea_getSelectedTab, None, TabbedArea)
TabbedArea.setBaseColor = new_instancemethod(_fifechan.TabbedArea_setBaseColor, None, TabbedArea)
TabbedArea.setBackgroundWidget = new_instancemethod(_fifechan.TabbedArea_setBackgroundWidget, None, TabbedArea)
TabbedArea.getBackgroundWidget = new_instancemethod(_fifechan.TabbedArea_getBackgroundWidget, None, TabbedArea)
TabbedArea.setLayout = new_instancemethod(_fifechan.TabbedArea_setLayout, None, TabbedArea)
TabbedArea.getLayout = new_instancemethod(_fifechan.TabbedArea_getLayout, None, TabbedArea)
TabbedArea.setUniformSize = new_instancemethod(_fifechan.TabbedArea_setUniformSize, None, TabbedArea)
TabbedArea.isUniformSize = new_instancemethod(_fifechan.TabbedArea_isUniformSize, None, TabbedArea)
TabbedArea.setVerticalSpacing = new_instancemethod(_fifechan.TabbedArea_setVerticalSpacing, None, TabbedArea)
TabbedArea.getVerticalSpacing = new_instancemethod(_fifechan.TabbedArea_getVerticalSpacing, None, TabbedArea)
TabbedArea.setHorizontalSpacing = new_instancemethod(_fifechan.TabbedArea_setHorizontalSpacing, None, TabbedArea)
TabbedArea.getHorizontalSpacing = new_instancemethod(_fifechan.TabbedArea_getHorizontalSpacing, None, TabbedArea)
TabbedArea_swigregister = _fifechan.TabbedArea_swigregister
TabbedArea_swigregister(TabbedArea)

class BarGraph(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.BarGraph_swiginit(self, _fifechan.new_BarGraph(*args))
    __swig_destroy__ = _fifechan.delete_BarGraph
BarGraph.setBarX = new_instancemethod(_fifechan.BarGraph_setBarX, None, BarGraph)
BarGraph.getBarX = new_instancemethod(_fifechan.BarGraph_getBarX, None, BarGraph)
BarGraph.setBarY = new_instancemethod(_fifechan.BarGraph_setBarY, None, BarGraph)
BarGraph.getBarY = new_instancemethod(_fifechan.BarGraph_getBarY, None, BarGraph)
BarGraph.setBarPosition = new_instancemethod(_fifechan.BarGraph_setBarPosition, None, BarGraph)
BarGraph.setBarWidth = new_instancemethod(_fifechan.BarGraph_setBarWidth, None, BarGraph)
BarGraph.getBarWidth = new_instancemethod(_fifechan.BarGraph_getBarWidth, None, BarGraph)
BarGraph.setBarHeight = new_instancemethod(_fifechan.BarGraph_setBarHeight, None, BarGraph)
BarGraph.getBarHeight = new_instancemethod(_fifechan.BarGraph_getBarHeight, None, BarGraph)
BarGraph.setBarSize = new_instancemethod(_fifechan.BarGraph_setBarSize, None, BarGraph)
BarGraph.setOpaque = new_instancemethod(_fifechan.BarGraph_setOpaque, None, BarGraph)
BarGraph.isOpaque = new_instancemethod(_fifechan.BarGraph_isOpaque, None, BarGraph)
BarGraph_swigregister = _fifechan.BarGraph_swigregister
BarGraph_swigregister(BarGraph)

class CurveGraph(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.CurveGraph_swiginit(self, _fifechan.new_CurveGraph(*args))
    __swig_destroy__ = _fifechan.delete_CurveGraph
CurveGraph.setPointVector = new_instancemethod(_fifechan.CurveGraph_setPointVector, None, CurveGraph)
CurveGraph.getPointVector = new_instancemethod(_fifechan.CurveGraph_getPointVector, None, CurveGraph)
CurveGraph.resetPointVector = new_instancemethod(_fifechan.CurveGraph_resetPointVector, None, CurveGraph)
CurveGraph.setThickness = new_instancemethod(_fifechan.CurveGraph_setThickness, None, CurveGraph)
CurveGraph.getThickness = new_instancemethod(_fifechan.CurveGraph_getThickness, None, CurveGraph)
CurveGraph.setAutomaticControllPoints = new_instancemethod(_fifechan.CurveGraph_setAutomaticControllPoints, None, CurveGraph)
CurveGraph.isAutomaticControllPoints = new_instancemethod(_fifechan.CurveGraph_isAutomaticControllPoints, None, CurveGraph)
CurveGraph.setOpaque = new_instancemethod(_fifechan.CurveGraph_setOpaque, None, CurveGraph)
CurveGraph.isOpaque = new_instancemethod(_fifechan.CurveGraph_isOpaque, None, CurveGraph)
CurveGraph_swigregister = _fifechan.CurveGraph_swigregister
CurveGraph_swigregister(CurveGraph)

class LineGraph(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.LineGraph_swiginit(self, _fifechan.new_LineGraph(*args))
    __swig_destroy__ = _fifechan.delete_LineGraph
LineGraph.setPointVector = new_instancemethod(_fifechan.LineGraph_setPointVector, None, LineGraph)
LineGraph.getPointVector = new_instancemethod(_fifechan.LineGraph_getPointVector, None, LineGraph)
LineGraph.resetPointVector = new_instancemethod(_fifechan.LineGraph_resetPointVector, None, LineGraph)
LineGraph.setThickness = new_instancemethod(_fifechan.LineGraph_setThickness, None, LineGraph)
LineGraph.getThickness = new_instancemethod(_fifechan.LineGraph_getThickness, None, LineGraph)
LineGraph.setOpaque = new_instancemethod(_fifechan.LineGraph_setOpaque, None, LineGraph)
LineGraph.isOpaque = new_instancemethod(_fifechan.LineGraph_isOpaque, None, LineGraph)
LineGraph_swigregister = _fifechan.LineGraph_swigregister
LineGraph_swigregister(LineGraph)

class PieGraph(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.PieGraph_swiginit(self, _fifechan.new_PieGraph(*args))
    __swig_destroy__ = _fifechan.delete_PieGraph
PieGraph.setCenterX = new_instancemethod(_fifechan.PieGraph_setCenterX, None, PieGraph)
PieGraph.setCenterY = new_instancemethod(_fifechan.PieGraph_setCenterY, None, PieGraph)
PieGraph.getCenterX = new_instancemethod(_fifechan.PieGraph_getCenterX, None, PieGraph)
PieGraph.getCenterY = new_instancemethod(_fifechan.PieGraph_getCenterY, None, PieGraph)
PieGraph.setCenter = new_instancemethod(_fifechan.PieGraph_setCenter, None, PieGraph)
PieGraph.getCenter = new_instancemethod(_fifechan.PieGraph_getCenter, None, PieGraph)
PieGraph.setRadius = new_instancemethod(_fifechan.PieGraph_setRadius, None, PieGraph)
PieGraph.getRadius = new_instancemethod(_fifechan.PieGraph_getRadius, None, PieGraph)
PieGraph.addSegment = new_instancemethod(_fifechan.PieGraph_addSegment, None, PieGraph)
PieGraph.clearSegments = new_instancemethod(_fifechan.PieGraph_clearSegments, None, PieGraph)
PieGraph.setOpaque = new_instancemethod(_fifechan.PieGraph_setOpaque, None, PieGraph)
PieGraph.isOpaque = new_instancemethod(_fifechan.PieGraph_isOpaque, None, PieGraph)
PieGraph_swigregister = _fifechan.PieGraph_swigregister
PieGraph_swigregister(PieGraph)

class PointGraph(Widget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _fifechan.PointGraph_swiginit(self, _fifechan.new_PointGraph(*args))
    __swig_destroy__ = _fifechan.delete_PointGraph
PointGraph.setPointVector = new_instancemethod(_fifechan.PointGraph_setPointVector, None, PointGraph)
PointGraph.getPointVector = new_instancemethod(_fifechan.PointGraph_getPointVector, None, PointGraph)
PointGraph.resetPointVector = new_instancemethod(_fifechan.PointGraph_resetPointVector, None, PointGraph)
PointGraph.setThickness = new_instancemethod(_fifechan.PointGraph_setThickness, None, PointGraph)
PointGraph.getThickness = new_instancemethod(_fifechan.PointGraph_getThickness, None, PointGraph)
PointGraph.setOpaque = new_instancemethod(_fifechan.PointGraph_setOpaque, None, PointGraph)
PointGraph.isOpaque = new_instancemethod(_fifechan.PointGraph_isOpaque, None, PointGraph)
PointGraph_swigregister = _fifechan.PointGraph_swigregister
PointGraph_swigregister(PointGraph)

class FcnPointVector(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _fifechan.FcnPointVector_swiginit(self, _fifechan.new_FcnPointVector(*args))
    __swig_destroy__ = _fifechan.delete_FcnPointVector
FcnPointVector.iterator = new_instancemethod(_fifechan.FcnPointVector_iterator, None, FcnPointVector)
FcnPointVector.__nonzero__ = new_instancemethod(_fifechan.FcnPointVector___nonzero__, None, FcnPointVector)
FcnPointVector.__bool__ = new_instancemethod(_fifechan.FcnPointVector___bool__, None, FcnPointVector)
FcnPointVector.__len__ = new_instancemethod(_fifechan.FcnPointVector___len__, None, FcnPointVector)
FcnPointVector.__getslice__ = new_instancemethod(_fifechan.FcnPointVector___getslice__, None, FcnPointVector)
FcnPointVector.__setslice__ = new_instancemethod(_fifechan.FcnPointVector___setslice__, None, FcnPointVector)
FcnPointVector.__delslice__ = new_instancemethod(_fifechan.FcnPointVector___delslice__, None, FcnPointVector)
FcnPointVector.__delitem__ = new_instancemethod(_fifechan.FcnPointVector___delitem__, None, FcnPointVector)
FcnPointVector.__getitem__ = new_instancemethod(_fifechan.FcnPointVector___getitem__, None, FcnPointVector)
FcnPointVector.__setitem__ = new_instancemethod(_fifechan.FcnPointVector___setitem__, None, FcnPointVector)
FcnPointVector.pop = new_instancemethod(_fifechan.FcnPointVector_pop, None, FcnPointVector)
FcnPointVector.append = new_instancemethod(_fifechan.FcnPointVector_append, None, FcnPointVector)
FcnPointVector.empty = new_instancemethod(_fifechan.FcnPointVector_empty, None, FcnPointVector)
FcnPointVector.size = new_instancemethod(_fifechan.FcnPointVector_size, None, FcnPointVector)
FcnPointVector.swap = new_instancemethod(_fifechan.FcnPointVector_swap, None, FcnPointVector)
FcnPointVector.begin = new_instancemethod(_fifechan.FcnPointVector_begin, None, FcnPointVector)
FcnPointVector.end = new_instancemethod(_fifechan.FcnPointVector_end, None, FcnPointVector)
FcnPointVector.rbegin = new_instancemethod(_fifechan.FcnPointVector_rbegin, None, FcnPointVector)
FcnPointVector.rend = new_instancemethod(_fifechan.FcnPointVector_rend, None, FcnPointVector)
FcnPointVector.clear = new_instancemethod(_fifechan.FcnPointVector_clear, None, FcnPointVector)
FcnPointVector.get_allocator = new_instancemethod(_fifechan.FcnPointVector_get_allocator, None, FcnPointVector)
FcnPointVector.pop_back = new_instancemethod(_fifechan.FcnPointVector_pop_back, None, FcnPointVector)
FcnPointVector.erase = new_instancemethod(_fifechan.FcnPointVector_erase, None, FcnPointVector)
FcnPointVector.push_back = new_instancemethod(_fifechan.FcnPointVector_push_back, None, FcnPointVector)
FcnPointVector.front = new_instancemethod(_fifechan.FcnPointVector_front, None, FcnPointVector)
FcnPointVector.back = new_instancemethod(_fifechan.FcnPointVector_back, None, FcnPointVector)
FcnPointVector.assign = new_instancemethod(_fifechan.FcnPointVector_assign, None, FcnPointVector)
FcnPointVector.resize = new_instancemethod(_fifechan.FcnPointVector_resize, None, FcnPointVector)
FcnPointVector.insert = new_instancemethod(_fifechan.FcnPointVector_insert, None, FcnPointVector)
FcnPointVector.reserve = new_instancemethod(_fifechan.FcnPointVector_reserve, None, FcnPointVector)
FcnPointVector.capacity = new_instancemethod(_fifechan.FcnPointVector_capacity, None, FcnPointVector)
FcnPointVector_swigregister = _fifechan.FcnPointVector_swigregister
FcnPointVector_swigregister(FcnPointVector)



